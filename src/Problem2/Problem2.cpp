#include <iostream>
#include "../Util/Util.h"
#include "Problem2.h"

// Problem 2:
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

/**
 * Function that generates fibonacci sequence
 * @param x
 * @return sum of even fibonacci numbers less than or equal to x
 */
int evenFibonacciSum(int x) {
    const int size = 3;
    int *fibs = new int[size];
    fibs[0] = 1;
    fibs[1] = 1;
    int counter = 2;
    int evenSum = 0;
    do {
        fibs[counter] = fibs[modulo(counter - 1, size)] + fibs[modulo(counter - 2, size)];
        counter = modulo(counter + 1, size);
        if (fibs[counter] % 2 == 0)
            evenSum += fibs[counter];
    } while (fibs[counter] < x);
    return evenSum;
}

void problem2() {
    std::cout << evenFibonacciSum(4000000) << std::endl;
}
